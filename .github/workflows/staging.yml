# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '14.14'
    - name: 'Build and Deploy'
      run: |
        npm install
        npm install sfdx-cli --global
        # wget https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz
        # mkdir sfdx-cli
        # tar xJf sfdx-linux-amd64.tar.xz -C sfdx-cli --strip-components 1
        # ./sfdx-cli/install
 # Runs a set of commands using the runners shell
    - name: 'Decrypt file'
      run: openssl enc -nosalt -aes-256-cbc -d -in assets/server.key.enc -out server.key -base64 -K ${{secrets.DECRYPTION_KEY}} -iv ${{secrets.DECRYPTION_IV}}
    - name: 'Authorize'
      run: sfdx force:auth:jwt:grant --clientid=${{ secrets.CONSUMER_KEY }} --username=${{ secrets.USERNAME }} --jwtkeyfile server.key --setdefaultdevhubusername --setalias=prod-org
    - name: "Install App and Create Delta"
      run: | 
        echo y | sfdx plugins:install sfdx-git-delta
        git config remote.origin.fetch '+refs/heads/*:refs/remotes/origin/*'
        git fetch --all
        git --no-pager diff --name-status dev origin/master
        sfdx sgd:source:delta --to dev --from origin/master  --repo . --output .
        cat package/package.xml
        cat destructiveChanges/destructiveChanges.xml
    - name: 'Convert Metadata'
      run: |
        sfdx force:source:convert --manifest=package/package.xml --outputdir=convert
        sfdx force:source:convert --manifest=destructiveChanges/destructiveChanges.xml --outputdir=convert_destructive
    - name: 'Run Test on Metadata'
      run: |
        sfdx force:mdapi:deploy --deploydir=convert  -u prod-org
        sfdx force:mdapi:deploy --deploydir=convert_destructive  -u prod-org
